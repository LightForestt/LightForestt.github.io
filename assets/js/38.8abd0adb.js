(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{391:function(n,v,l){"use strict";l.r(v);var e=l(44),t=Object(e.a)({},(function(){var n=this,v=n.$createElement,l=n._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[l("h2",{attrs:{id:"nvm-切换-npm-版本"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#nvm-切换-npm-版本"}},[n._v("#")]),n._v(" nvm - 切换 npm 版本")]),n._v(" "),l("blockquote",[l("p",[n._v("切换不同版本的 node 版本以应对不同的场景。\n全局安装后，通过以下命令，进行不同 node 版本的切换。")])]),n._v(" "),l("ul",[l("li",[n._v("nvm install stable 安装最新的稳定版本")]),n._v(" "),l("li",[n._v("nvm install <version> 安装指定的版本")]),n._v(" "),l("li",[n._v("nvm inunstall <version> 卸载制定版本")]),n._v(" "),l("li",[n._v("nvm use <version> 使用指定的版本")]),n._v(" "),l("li",[n._v("nvm ls 列出安装的版本")]),n._v(" "),l("li",[n._v("nvm ls-remote 列出所有远程服务器的版本")]),n._v(" "),l("li",[n._v("nvm current 查看当前的版本")]),n._v(" "),l("li",[n._v("nvm alias <name> <version> 为当前版本设置别名")]),n._v(" "),l("li",[n._v("nvm unalias <name> 删除某个版本的 node")]),n._v(" "),l("li",[n._v("nvm reinstall-package <version> 在当前环境下重新安装某个版本的 npm 包")])])])}),[],!1,null,null,null);v.default=t.exports}}]);